@page
@model AlumnoModel
@{
    ViewData["Title"] = "Usuarios";
}
<h1>@ViewData["Title"]</h1>

<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat</title>
</head>

<body>
    <div class="general-cont">
        <div class="left-cont">
            <header>
                <div class="header__icons">
                    <i class='bx bx-sync'></i>
                    <i class='bx bx-message-detail'></i>
                    <i class='bx bx-dots-vertical-rounded'></i>
                </div>
            </header>
            <main>
                <div class="input-div">
                    <span>
                        <i class='bx bx-search-alt-2'></i>
                    </span>
                    <input type="text" id="myInput" onkeyup="myFunction()" placeholder="Buscar grupo">
                </div>
                    <section id="mySection">
                        <div class="contenedor-divs">
                            <div class="div-messages">
                                <img src="~/images/iconoperfil.png" alt="foto-sin-perfil">
                                <div class="div-messages__contenido">  
                                    <div  class="usuarios-sms">
                                        <p class="usuario-visto titulo">Grupo Español</p>
                                    </div>
                                    <div class="chose">
                                    <span class="usuario-visto"><button type="button" class="btnChat" value="Agregar" data-modal="modalAgregar">Escribir</button></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section>          
            </main>
        </div>

        <div class="right-cont">
            <img src="~/images/notification.png" alt="cell"/>
            <article>
                <h2>Mantente siempre al tanto</h2>
                <div id="contenedor">
                </div>
                <template id="plantilla">
                    <tr>
                        <td class="idAlumnos"></td>
                        <td class="nombreAlumno"></td>
                        <td class="idDocentes"></td>
                        <td class="idMensajes"></td>
                        <td ><a href="#" data-id="0" data-modal="modalEditar">Editar</a></td>
                        <td ><a href="#" data-id="0" data-modal="modalEliminar">Eliminar</a></td>
                    </tr>
                </template>
               
            </article>
        </div>
    </div>

      <div class="modal" id="modalAgregar">
                <div>
                    <form method="post" data-action="AgregarMensaje">
                <input type="hidden" name="idMensajes" />
                        <h1>Mensaje</h1>
                         <label>Docente:</label>
                         <select id="idDocente" required name="idDocente"></select>
                        <label>Alumno:</label>
                         <select id="idAlumno" required name="idAlumno">                 
                         </select>                  
                        <label>Mensaje:</label>
                        <textarea cols="100" rows="3" style="resize: none; border:none;" required name="idMensajes">
                            </textarea>
                        <input type="submit" class="btn btn-primary" value="Enviar" step="0.5" style="padding:1px; color:white;" />
                        <input type="button" class="btn btn-danger" value="Cancelar" data-cancel="1" style="padding:1px" />
                    </form>
                </div>
       </div>


    <div class="modal" id="modalEditar">
       <div>
         <form method="post" data-action="EditarMensaje">
           <input type="hidden" name="idMensajes" />
                  <h1>Mensaje</h1>
                   <label>Docente:</label>
                    <select id="idDocente" required name="idDocente"></select>
                   <label>Alumno:</label>
                    <select id="idAlumno" required>                 
                    </select>              
                     <label>Mensaje:</label>
                     <textarea cols="100" rows="3" style="resize: none; border:none;" required itemid="txtMensaje"></textarea>
                        <input type="submit" class="btn btn-primary" value="Enviar" step="0.5" style="padding:1px; color:white;" />
                        <input type="button" class="btn btn-danger" value="Cancelar" data-cancel="1" style="padding:1px" />
                    </form>
    </div

    <div class="modal" id="modalEliminar">
         <input type="hidden" name="idMensajes" />
        <div style="height: 135px;">
            <form method="post" data-action="EliminarMensaje">
                <h1>Eliminar Mensaje</h1>
                <label>¿Está seguro de que desea eliminar el siguiente mensaje?</label>          
                <input type="submit" class="btn btn-danger" value="Eliminar" step="0.5" style="padding:1px; color:white;" />
                <input type="button" class="btn btn-info" value="Cancelar" data-cancel="1" style="padding:1px" />
            </form>
        </div>
    </div>


</body>
</html>

<script>

    loadChat();
    loadAlumno();
    loadDocente();

    function myFunction() {
        var input, filter, section, div, p, i;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        section = document.getElementById("mySection");
        div = section.getElementsByTagName("div");

        for (i = 0; i < div.length; i++) {
            p = div[i].getElementsByTagName("p")[0];
            if (p) {
                var palabrasEnFiltro = filter.split(' ');
                var hallado = 0;
                for (var filtro of palabrasEnFiltro) {
                    if (p.innerHTML.toUpperCase().indexOf(filtro) > -1) {
                        hallado++;
                    }
                }
                if (hallado === palabrasEnFiltro.length) {
                    div[i].style.display = "";
                } else {
                    div[i].style.display = "none";
                }

            }
        }
    }

    

    async function loadChat() {
        var result = await fetch("https://teachnotifyme.itesrc.net/api/Mensaje")
        let datos = await result.json();
        miMetodo(datos);
        console.log(datos);
    }


   var tabla = document.getElementById("contenedor");
   var plantilla = document.getElementById("plantilla");


     function miMetodo(datos){
        let cantidad = datos.length;
        if (cantidad > tabla.children.length) {
            let n = cantidad - tabla.children.length;
            for (var x = 0; x < n; x++) {
                let clon = plantilla.content.children[0].cloneNode(true);
                tabla.append(clon);
            }
        }
        else if (cantidad < tabla.children.length) {
            let n = tabla.children.length - cantidad;
            for (var x = 0; x < n; x++) {
                tabla.lastChild.remove();
            }
        }

       
         datos.forEach((o, i) => {
            let tr = tabla.children[i];
            tr.cells[0].innerHTML = o.idMensajes;
            tr.cells[1].innerHTML = o.nombreAlumno;
            tr.cells[2].innerHTML = o.nombreDocente;
            tr.cells[3].innerHTML = o.mensajes;
            //tr.cells[4].innerHTML = o.fecha;
            //tr.cells[4].children.[0].dataset.id = o.idMensajes;
            tr.cells[4].children[0].setAttribute("data-id", o.idMensajes);
            tr.cells[5].children[0].setAttribute("data-id", o.idMensajes);
   
        }); 

    }

    async function loadDocente() {
        var result = await fetch("https://teachnotifyme.itesrc.net/api/Docente")
        let datos = await result.json();
        //metodoDocente(datos);
        console.log(datos);

        let select = document.getElementById("idDocente");
        datos.forEach(x => {
            var noDocentes = document.createElement("option");
            noDocentes.value = x.idDocente;
            noDocentes.innerHTML = x.nombreDocente;
            select.options.add(noDocentes);
        });
    }


        async function loadAlumno() {
        var result = await fetch("https://teachnotifyme.itesrc.net/api/Alumno")
        let datos = await result.json();
        //meotodoAlumno(datos);
        console.log(datos);


        let select = document.getElementById("idAlumno");
        datos.forEach(x => {
          var noAlumnos = document.createElement("option");
            noAlumnos.value = x.idAlumno;
            noAlumnos.innerHTML = x.nombreAlumno;
            select.options.add(noAlumnos);
        });
    }

    document.addEventListener("click", async function (event) {
    if (event.target.dataset.modal) {
        let modal = document.getElementById(event.target.dataset.modal)
        let editar = event.target.dataset.modal.includes("ModalEditar");
        var Msjs = event.target.dataset.id;
        if (editar) {
            let res = await fetch(API + "/Mensajes/GetById/" + Msjs);
            if (res.ok) {
                let mensaje = await res.json();
                let form = modal.querySelector("Form");
                //form.elements[0].value = mensaje["mensaje"];

            }
        }
        modal.style.display = "grid";
        return;
    }
    if (event.target.dataset.cancel) {
        event.target.closest(".modal").style.display = "none";
    }
});

function getDateTime() {
  const now = new Date();
  return {
    year: now.getFullYear(),
    month: now.getMonth() + 1, // Los meses en JavaScript van de 0 a 11
    day: now.getDate(),
    hour: now.getHours(),
    minute: now.getMinutes(),
    second: now.getSeconds()
  };
}
    
      document.addEventListener("submit", async function (event) 
        {
        event.preventDefault();
        let form = event.target;
        if (form.dataset.action === "AgregarMensaje") {
                let json = Object.fromEntries(new FormData(form));
                var metodo = "post";        
                json["fecha"] = getDateTime();
                let resp = await fetch("https://teachnotifyme.itesrc.net/api/Mensaje/AgregarMensaje", 
                { method: metodo,
                  body: JSON.stringify(json), headers: { "content-type": "application/json"}
                })
                if (resp.ok) {
                        form.reset();
                        form.closest(".modal").style.display = "none";
                }
        } 
         //else (form.dataset.action === "EditarMensaje")
         //    let json = Object.fromEntries(new FormData(form));
         //       var metodo = "post";        
         //       json["fecha"] = getDateTime();
         //       let resp = await fetch("https://teachnotifyme.itesrc.net/api/Mensaje/EditarMensaje", 
         //       { method: metodo,
         //         body: JSON.stringify(json), headers: { "content-type": "application/json"}
         //       })
        });  
  


</script>

